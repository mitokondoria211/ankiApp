#DataSourc
spring.messages.basename=messages
spring.messages.encoding=UTF-8

spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.idle-timeout=300000        
spring.datasource.hikari.pool-name=HikariPool
spring.datasource.hikari.max-lifetime=1200000       
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.auto-commit=true


spring.jpa.show-sql=true
#SQLスクリプトの初期化モードを設
spring.sql.init.mode=always
#Log表示設定
logging.level.com.example.webapp.repository=DEBUG

#Spring Security設定
#アカウントロックを行うログイン失敗回数境界値
security.locking-border-count=3
#アカウントロックの継続時間
security.locking-time=1

#ログレベル
logging.level.root=INFO
logging.level.com.example.ankiapp=DEBUG
#ログ出力先
logging.file.name=C:/work/log/debug.log

spring.jpa.open-in-view=false

#SMTPサーバのホストアドレス
spring.mail.host=smtp.gmail.com
#SMTPサーバのポート番号
spring.mail.port=587
#メールアドレス
spring.mail.username=mitososu28@gmail.com
#SMTPサーバのパスワード
spring.mail.password=ugcuiglafluzigkm
#SMTPサーバの認証有無
spring.mail.properties.mail.smtp.auth=true
#暗号化された通信の有無
spring.mail.properties.mail.smtp.starttls.enable=true

#ワンタイムコード有効時間
one-time-code.valid-time=3m
#ワンタイムレコードの長さ
one-time-code.length=4


#画像ファイルの取得
#デッキの画像保存場所
image.folder=C:\\work
#image.folder=user
#image.folder=src/main/resources/static/images/
#image.folder=C:\\work/image
#デッキ画像保管拡張子
image.extract=.jpg
#デッキのデフォルト画像
image.default=default
default.image=https://res.cloudinary.com/dqdtj99hf/image/upload/v1742868532/default.jpg

#画像ファイル設定
spring.servlet.multipart.max-file-size = 10MB
spring.servlet.multipart.max-request-size = 10MB
spring.servlet.multipart.enabled=true

spring.application.name=ankiapp

spring.web.resources.chain.strategy.content.enabled=true
spring.web.resources.chain.strategy.content.paths=/**

#Cloudinaryの設定
cloudinary.cloud-name=dqdtj99hf
cloudinary.api-key=762299178222261
cloudinary.api-secret=A8_-ELUB1JiSdt2YSr_6no3VwdM

cloudinary.upload.format=webp
cloudinary.upload.quality=auto

#logging.level.org.hibernate.SQL=DEBUG
#logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
#spring.jpa.properties.hibernate.format_sql=true

#Heroku
server.port=${PORT:8080}

#heroku sqlの場合
spring.datasource.url=${JDBC_DATABASE_URL}
spring.datasource.username=${JDBC_DATABASE_USERNAME}
spring.datasource.password=${JDBC_DATABASE_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.hibernate.ddl-auto=update
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

#local sqlの場合
##Postgresのドライバー設定
#spring.datasource.driver-class-name=org.postgresql.Driver
##データベースへのURLを設定
#spring.datasource.url=jdbc:postgresql://localhost:5432/ankidb
##データベース接続するためのユーザー名を設定
#spring.datasource.username=ankiuser
##データベース接続するためのパスワードを設定
#spring.datasource.password=p@ss
#spring.jpa.hibernate.ddl-auto=update

# エラー表示の設定
server.error.whitelabel.enabled=false
server.error.include-stacktrace=always
server.error.include-message=always

logging.level.org.springframework.transaction=DEBUG
logging.level.org.hibernate.SQL=DEBUG



